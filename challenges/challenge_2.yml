AWSTemplateFormatVersion: "2010-09-09"
Description: >
    Creates the required network infrastructure

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VpcCIDR: 
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.0.0.0/16

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.1.0/24

    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.0.2.0/24

Resources:

    MainVPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Ref EnvironmentName

    InternetGW:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            
    AttachInternetGateway:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGW
            VpcId: !Ref MainVPC

    PublicSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MainVPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    PrivateSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MainVPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

    NAT: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt EIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    EIP:
        Type: AWS::EC2::EIP
        Properties:
            Tags:
            - Key: Name
              Value: "Elastic IP for our NAT Gateway"

    PrivateRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref MainVPC
            Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref MainVPC
            Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Public Routes

    # AssociatePUBRT:
    #     Type: AWS::EC2::SubnetRouteTableAssociation
    #     Properties:
    #         RouteTableId: !Ref PublicRouteTable
    #         SubnetId: !Ref PublicSubnet1

    # AssociatePRIVRT:
    #     Type: AWS::EC2::SubnetRouteTableAssociation
    #     Properties:
    #         RouteTableId: !Ref PrivateRouteTable
    #         SubnetId: !Ref PrivateSubnet1

    # PublicInternetRoute: 
    #     Type: AWS::EC2::Route
    #     DependsOn: InternetGatewayAttachment
    #     Properties: 
    #         RouteTableId: !Ref PublicRouteTable
    #         DestinationCidrBlock: 0.0.0.0/0
    #         GatewayId: !Ref InternetGW

    # PrivateInternetOutboundRoute:
    #     Type: AWS::EC2::Route
    #     Properties:
    #         RouteTableId: !Ref PrivateRouteTable
    #         DestinationCidrBlock: 0.0.0.0/0
    #         NatGatewayId: !Ref NAT

    # PrivateSubnetRouteTableAssociation:
    #     Type: AWS::EC2::SubnetRouteTableAssociation
    #     Properties:
    #         RouteTableId: !Ref PrivateRouteTable
    #         SubnetId: !Ref PrivateSubnet

    


   